{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "TypeScript and JavaScript Language Features",
			"description": "Provides rich language support for JavaScript and TypeScript.",
			"reloadProjects.title": "Reload Project",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Dokončujte funkce podpisy jejich parametrů.",
			"typescript.tsdk.desc": "Specifies the folder path containing the tsserver and lib*.d.ts files to use.",
			"typescript.disableAutomaticTypeAcquisition": "Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
			"typescript.tsserver.log": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
			"typescript.tsserver.pluginPaths": "Additional paths to discover Typescript Language Service plugins. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"typescript.tsserver.pluginPaths.item": "Either an absolute or relative path. Relative path will be resolved against workspace folder(s).",
			"typescript.tsserver.trace": "Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.",
			"typescript.validate.enable": "Enable/disable TypeScript validation.",
			"typescript.format.enable": "Enable/disable default TypeScript formatter.",
			"javascript.format.enable": "Enable/disable default JavaScript formatter.",
			"format.insertSpaceAfterCommaDelimiter": "Defines space handling after a comma delimiter.",
			"format.insertSpaceAfterConstructor": "Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"format.insertSpaceAfterSemicolonInForStatements": "Defines space handling after a semicolon in a for statement.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Defines space handling after a binary operator.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Defines space handling after keywords in a control flow statement.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Defines space handling after function keyword for anonymous functions.",
			"format.insertSpaceBeforeFunctionParenthesis": "Defines space handling before function argument parentheses.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Defines space handling after opening and before closing non-empty parenthesis.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Defines space handling after opening and before closing non-empty brackets.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Defines space handling after opening and before closing template string braces.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Defines space handling after opening and before closing JSX expression braces.",
			"format.insertSpaceAfterTypeAssertion": "Defines space handling after type assertions in TypeScript. Requires using TypeScript 2.4 or newer in the workspace.",
			"format.placeOpenBraceOnNewLineForFunctions": "Defines whether an open brace is put onto a new line for functions or not.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Defines whether an open brace is put onto a new line for control blocks or not.",
			"javascript.validate.enable": "Enable/disable JavaScript validation.",
			"goToProjectConfig.title": "Go to Project Configuration",
			"javascript.referencesCodeLens.enabled": "Enable/disable references CodeLens in JavaScript files.",
			"typescript.referencesCodeLens.enabled": "Enable/disable references CodeLens in TypeScript files.",
			"typescript.implementationsCodeLens.enabled": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
			"typescript.openTsServerLog.title": "Open TS Server log",
			"typescript.restartTsServer": "Restart TS server",
			"typescript.selectTypeScriptVersion.title": "Select TypeScript Version...",
			"typescript.reportStyleChecksAsWarnings": "Report style checks as warnings.",
			"javascript.implicitProjectConfig.checkJs": "Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
			"typescript.npm": "Specifies the path to the NPM executable used for Automatic Type Acquisition. Requires using TypeScript 2.3.4 or newer in the workspace.",
			"typescript.check.npmIsInstalled": "Check if NPM is installed for Automatic Type Acquisition.",
			"configuration.suggest.names": "Enable/disable including unique names from the file in JavaScript suggestions.",
			"typescript.tsc.autoDetect": "Controls auto detection of tsc tasks.",
			"typescript.tsc.autoDetect.off": "Disable this feature.",
			"typescript.tsc.autoDetect.on": "Create both build and watch tasks.",
			"typescript.tsc.autoDetect.build": "Only create single run compile tasks.",
			"typescript.tsc.autoDetect.watch": "Only create compile and watch tasks.",
			"typescript.problemMatchers.tsc.label": "TypeScript problems",
			"typescript.problemMatchers.tscWatch.label": "TypeScript problems (watch mode)",
			"configuration.suggest.paths": "Enable/disable suggestions for paths in import statements and require calls.",
			"typescript.locale": "Sets the locale used to report JavaScript and TypeScript errors. Requires using TypeScript 2.6.0 or newer in the workspace. Default of `null` uses VS Code's locale.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
			"configuration.suggest.autoImports": "Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.",
			"taskDefinition.tsconfig.description": "The tsconfig file that defines the TS build.",
			"javascript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for JavaScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
			"typescript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for TypeScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
			"typescript.preferences.quoteStyle": "Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.",
			"typescript.preferences.importModuleSpecifier": "Preferred path style for auto imports.",
			"typescript.preferences.importModuleSpecifier.auto": "Infer the shortest path type.",
			"typescript.preferences.importModuleSpecifier.relative": "Relative to the file location.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`.",
			"typescript.updateImportsOnFileMove.enabled": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Prompt on each rename.",
			"typescript.updateImportsOnFileMove.enabled.always": "Always update paths automatically.",
			"typescript.updateImportsOnFileMove.enabled.never": "Never rename paths and don't prompt.",
			"typescript.autoClosingTags": "Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace.",
			"typescript.suggest.enabled": "Enabled/disable autocomplete suggestions.",
			"configuration.surveys.enabled": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
			"configuration.suggest.completeJSDocs": "Enable/disable suggestion to complete JSDoc comments.",
			"typescript.preferences.renameShorthandProperties": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace."
		},
		"out/utils/versionProvider": {
			"couldNotLoadTsVersion": "Could not load the TypeScript version at this path",
			"noBundledServerFound": "VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code."
		},
		"out/utils/versionPicker": {
			"useVSCodeVersionOption": "Use VS Code's Version",
			"useWorkspaceVersionOption": "Use Workspace Version",
			"learnMore": "Další informace",
			"selectTsVersion": "Select the TypeScript version used for JavaScript and TypeScript language features"
		},
		"out/utils/typingsStatus": {
			"installingPackages": "Fetching data for better TypeScript IntelliSense",
			"typesInstallerInitializationFailed.title": "Could not install typings files for JavaScript language features. Please ensure that NPM is installed or configure 'typescript.npm' in your user settings. Click [here]({0}) to learn more.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Znovu nezobrazovat"
		},
		"out/utils/surveyor": {
			"survey.checkJs.prompt": "Help improve VS Code's support for [checkJs](https://code.visualstudio.com/Docs/languages/javascript#_type-checking) in JavaScript! Since you have been using this feature, would you consider taking a short survey about your experience?",
			"takeShortSurvey": "Vyplnit krátký dotazník",
			"remindLater": "Remind Me Later",
			"neverAgain": "Disable JS/TS Surveys"
		},
		"out/utils/projectStatus": {
			"hintExclude": "To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}",
			"hintExclude.generic": "To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.",
			"large.label": "Configure Excludes",
			"hintExclude.tooltip": "To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on."
		},
		"out/utils/logger": {
			"channelName": "TypeScript"
		},
		"out/utils/api": {
			"invalidVersion": "invalid version"
		},
		"out/features/updatePathsOnRename": {
			"renameProgress.title": "Checking for update of JS/TS imports",
			"prompt": "Update imports for moved file: '{0}'?",
			"reject.title": "Ne",
			"accept.title": "Ano",
			"always.title": "Always automatically update imports",
			"never.title": "Never automatically update imports"
		},
		"out/features/task": {
			"buildTscLabel": "build - {0}",
			"buildAndWatchTscLabel": "watch - {0}"
		},
		"out/features/rename": {
			"fileRenameFail": "An error occurred while renaming file"
		},
		"out/features/referencesCodeLens": {
			"oneReferenceLabel": "1 odkaz",
			"manyReferenceLabel": "Počet odkazů: {0}"
		},
		"out/features/refactor": {
			"refactoringFailed": "Could not apply refactoring"
		},
		"out/features/quickFix": {
			"fixAllInFileLabel": "{0} (Opravit vše v souboru)"
		},
		"out/features/organizeImports": {
			"organizeImportsAction.title": "Organize Imports"
		},
		"out/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "JSDoc comment"
		},
		"out/features/implementationsCodeLens": {
			"oneImplementationLabel": "1 implementation",
			"manyImplementationLabel": "{0} implementations"
		},
		"out/features/fixAll": {
			"autoFix.label": "Auto fix"
		},
		"out/features/directiveCommentCompletions": {
			"ts-check": "Enables semantic checking in a JavaScript file. Must be at the top of a file.",
			"ts-nocheck": "Disables semantic checking in a JavaScript file. Must be at the top of a file.",
			"ts-ignore": "Suppresses @ts-check errors on the next line of a file."
		},
		"out/features/completions": {
			"selectCodeAction": "Select code action to apply",
			"acquiringTypingsLabel": "Acquiring typings...",
			"acquiringTypingsDetail": "Acquiring typings definitions for IntelliSense.",
			"autoImportLabel": "Auto import from {0}"
		},
		"out/features/baseCodeLensProvider": {
			"referenceErrorLabel": "Could not determine references"
		},
		"out/commands/goToProjectConfiguration": {
			"typescript.projectConfigNoWorkspace": "Please open a folder in VS Code to use a TypeScript or JavaScript project",
			"typescript.projectConfigUnsupportedFile": "Could not determine TypeScript or JavaScript project. Unsupported file type",
			"typescript.projectConfigCouldNotGetInfo": "Could not determine TypeScript or JavaScript project",
			"typescript.noTypeScriptProjectConfig": "File is not part of a TypeScript project. Click [here]({0}) to learn more.",
			"typescript.noJavaScriptProjectConfig": "File is not part of a JavaScript project Click [here]({0}) to learn more.",
			"typescript.configureTsconfigQuickPick": "Configure tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configure jsconfig.json"
		},
		"out/typescriptServiceClient": {
			"noServerFound": "The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.",
			"serverExitedWithError": "TypeScript language server exited with error. Error message is: {0}",
			"typescript.openTsServerLog.notSupported": "TS Server logging requires TS 2.2.2+",
			"typescript.openTsServerLog.loggingNotEnabled": "TS Server logging is off. Please set `typescript.tsserver.log` and restart the TS server to enable logging",
			"typescript.openTsServerLog.enableAndReloadOption": "Enable logging and restart TS server",
			"typescript.openTsServerLog.noLogFile": "TS Server has not started logging.",
			"openTsServerLog.openFileFailedFailed": "Could not open TS Server log file",
			"serverDiedAfterStart": "The TypeScript language service died 5 times right after it got started. The service will not be restarted.",
			"serverDiedReportIssue": "Report Issue",
			"serverDied": "The TypeScript language service died unexpectedly 5 times in the last 5 Minutes.",
			"serverLoading.progress": "Initializing JS/TS language features"
		}
	}
}